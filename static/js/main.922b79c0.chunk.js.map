{"version":3,"sources":["components/Table.js","components/TableWrapper.js","pages/Payments.js","pages/ErrorPage.js","components/MyNavbar.js","App.js","reportWebVitals.js","index.js"],"names":["DataTable","userColumns","columns","data","renderRowSubComponent","defaultColumn","React","useMemo","width","useTable","useExpanded","useBlockLayout","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","visibleColumns","expanded","state","JSON","stringify","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","rowProps","getRowProps","Fragment","cells","cell","getCellProps","isExpanded","colSpan","length","key","ExpandTableComponent","id","Header","Cell","canExpand","getToggleRowExpandedProps","name","accessor","d","Payee","Name","Phone","Fax","Payment","PAN","CVV","Exp","Address","Address1","Address2","City","StateOrProvince","PostalCode","Country","paymentsSample","StyledTable","styled","div","TableWrapper","props","children","Styles","Payments","ErrorPage","MyNavbar","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-disabled","aria-current","App","exact","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.922b79c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useTable, useExpanded, useBlockLayout } from 'react-table';\r\nimport paymentsSample from '../data/paymentsSample.json';\r\n\r\n// SubTable for when rows expand to expose Payors, Payor info, and Invoice info per Client\r\nfunction SubTable({ visibleColumns: subColumns, data }) {\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      width: 200\r\n    }),\r\n    []\r\n  );\r\n  const { getTableProps, getTableBodyProps, rows, prepareRow } = useTable(\r\n    {\r\n      visibleColumns: subColumns,\r\n      data,\r\n      defaultColumn\r\n    },\r\n    useBlockLayout\r\n  );\r\n  return (\r\n    <table className=\"subRowTable\" {...getTableProps()}>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\n// SubRowComponent is to create react SubTable\r\n// -- currently malfunctioning :(\r\nfunction SubRowComponent() {\r\n  const visibleColumns = React.useMemo(\r\n    () => [\r\n      {\r\n        id: 'subRows',\r\n        Header: () => null\r\n      },\r\n      {\r\n        Header: () => null,\r\n        visibleColumns: [\r\n          {\r\n            Header: 'Payor',\r\n            // width: ,\r\n            accessor: d => d.Remittance.PayorName\r\n          },\r\n          {\r\n            Header: 'Payor ID',\r\n            // width: ,\r\n            accessor: d => d.Remittance.PayorId\r\n          },\r\n          {\r\n            Header: 'Invoice #',\r\n            // width: ,\r\n            accessor: d => d.Remittance.InvoiceNo\r\n          },\r\n          {\r\n            Header: 'Amount',\r\n            // width: ,\r\n            accessor: d => d.Remittance.Amount\r\n          },\r\n          {\r\n            Header: 'Description',\r\n            // width: ,\r\n            accessor: d => d.Remittance.Description\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n  const data = paymentsSample;\r\n\r\n  return (\r\n    <SubTable>\r\n      visibleColumns={visibleColumns}\r\n      data={data}\r\n    </SubTable>\r\n  );\r\n}\r\n\r\n// Create main DataTable with Clients and their info\r\nfunction DataTable({ columns: userColumns, data, renderRowSubComponent }) {\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      width: 200\r\n    }),\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    visibleColumns,\r\n    state: { expanded }\r\n  } = useTable(\r\n    {\r\n      columns: userColumns,\r\n      data,\r\n      defaultColumn\r\n    },\r\n    useExpanded,\r\n    useBlockLayout\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <pre>\r\n        <code>{JSON.stringify({ expanded: expanded }, null, 2)}</code>\r\n      </pre>\r\n      <table className=\"table\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr className=\"headerRows\" {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            const rowProps = row.getRowProps();\r\n            return (\r\n              <React.Fragment key={rowProps.key}>\r\n                <tr {...rowProps}>\r\n                  {row.cells.map(cell => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n                {row.isExpanded ? (\r\n                  <tr>\r\n                    <td colSpan={visibleColumns.length}>\r\n                      {renderRowSubComponent({ row })}\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\n// Formulate the main DataTable of Clients\r\nfunction ExpandTableComponent() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        id: 'expander',\r\n        Header: () => null,\r\n        width: 25,\r\n        Cell: ({ row }) =>\r\n          row.canExpand ? (\r\n            <span {...row.getToggleRowExpandedProps()}>\r\n              {row.isExpanded ? (\r\n                <ion-icon name=\"chevron-down-outline\"></ion-icon>\r\n              ) : (\r\n                <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n              )}\r\n            </span>\r\n          ) : (\r\n            <ion-icon name=\"remove-outline\"></ion-icon>\r\n          )\r\n      },\r\n      {\r\n        Header: 'Payments',\r\n        columns: [\r\n          {\r\n            Header: 'Client',\r\n            width: 110,\r\n            accessor: d => d.Payee.Name\r\n          },\r\n          {\r\n            Header: 'Phone Number',\r\n            width: 140,\r\n            accessor: d => d.Payee.Phone\r\n          },\r\n          {\r\n            Header: 'Fax Number',\r\n            width: 140,\r\n            accessor: d => d.Payee.Fax\r\n          },\r\n          {\r\n            Header: 'PAN',\r\n            width: 160,\r\n            accessor: d => d.Payment.PAN\r\n          },\r\n          {\r\n            Header: 'CVV',\r\n            width: 50,\r\n            accessor: d => d.Payment.CVV\r\n          },\r\n          {\r\n            Header: 'Exp',\r\n            width: 70,\r\n            accessor: d => d.Payment.Exp\r\n          },\r\n          {\r\n            Header: 'Address',\r\n            width: 415,\r\n            accessor: d =>\r\n              d.Payee.Address.Address1 +\r\n              '' +\r\n              d.Payee.Address.Address2 +\r\n              ', ' +\r\n              d.Payee.Address.City +\r\n              ', ' +\r\n              d.Payee.Address.StateOrProvince +\r\n              ' ' +\r\n              d.Payee.Address.PostalCode +\r\n              ' ' +\r\n              d.Payee.Address.Country\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = paymentsSample;\r\n\r\n  const renderRowSubComponent =\r\n    (({ row, rowProps, visibleColumns, data }) => (\r\n      <React.Fragment>\r\n        <pre>\r\n          <code>{JSON.stringify({ values: row.values }, null, 2)}</code>\r\n        </pre>\r\n        <SubRowComponent>\r\n          row={row}\r\n          rowProps={rowProps}\r\n          visibleColumns={visibleColumns}\r\n          data={data}\r\n        </SubRowComponent>\r\n      </React.Fragment>\r\n    ),\r\n    []);\r\n\r\n  return (\r\n    <DataTable\r\n      columns={columns}\r\n      data={data}\r\n      renderRowSubComponent={renderRowSubComponent}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ExpandTableComponent;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTable = styled.div`\r\n  .headerRows {\r\n    color: #6f1f88;\r\n    border: none;\r\n  }\r\n  .table {\r\n    display: inline-block;\r\n    color: #bd036c;\r\n    font-size: 0.95em;\r\n  }\r\n  .container {\r\n    padding-top: 100px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst TableWrapper = props => {\r\n  return (\r\n    <StyledTable>\r\n      <div className=\"container\">{props.children}</div>\r\n    </StyledTable>\r\n  );\r\n};\r\n\r\nexport default TableWrapper;\r\n","import React from 'react';\r\nimport ExpandTableComponent from '../components/Table';\r\nimport TableWrapper from '../components/TableWrapper';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  // background-color: #fef5ec;\r\n`;\r\n\r\nconst Payments = () => (\r\n  <Styles>\r\n    <TableWrapper>\r\n      <ExpandTableComponent></ExpandTableComponent>\r\n    </TableWrapper>\r\n  </Styles>\r\n);\r\n\r\nexport default Payments;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  text-align: center;\r\n  padding: 200px;\r\n`;\r\n\r\nconst ErrorPage = () => (\r\n  <Styles>\r\n    <h3>\"Error. Please return to Payments page.\"</h3>\r\n  </Styles>\r\n);\r\n\r\nexport default ErrorPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  background-color: #ffffff;\r\n  a {\r\n    font-size: 1.25rem;\r\n    color: #466e84;\r\n    &:hover {\r\n      color: #2b79a5;\r\n    }\r\n  }\r\n  align-items: center;\r\n`;\r\n\r\nconst MyNavbar = () => {\r\n  return (\r\n    <Styles>\r\n      <nav className=\"navbar fixed-top navbar-expand-lg\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Payments Page\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNavAltMarkup\"\r\n            aria-controls=\"navbarNavAltMarkup\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n            <div className=\"navbar-nav\">\r\n              <a\r\n                className=\"nav-link disabled\"\r\n                aria-disabled=\"true\"\r\n                aria-current=\"page\"\r\n                href=\"#\"\r\n              >\r\n                Home\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </Styles>\r\n  );\r\n};\r\n\r\nexport default MyNavbar;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Payments from './pages/Payments';\nimport ErrorPage from './pages/ErrorPage';\nimport MyNavbar from './components/MyNavbar';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <MyNavbar />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Payments} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}